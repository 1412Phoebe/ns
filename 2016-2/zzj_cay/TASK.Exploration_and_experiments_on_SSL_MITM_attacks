【HTTPS协议中间人攻击的可能性探究与实验 】

+==================================+
DNS查询泄漏（经由DNS解析服务器）与MITM
+==================================+

DNS泄露:在某些情况下，即使连接到 VPN，操作系统仍然继续使用其默认的 DNS 服务器（比如在本地解析），这就导致了 DNS 泄露。

域传输漏洞*

利用原理：
    1) 透明DNS代理技术 - ISP 可以拦截所有 DNS 查询请求(TCP/UDP端口53)，有效地迫使你使用他们的 DNS 服务器进行所有的 DNS 查找。
    2) 开启VPN，PAC模式在本地解析域名，将会暴露IP。解决问题的根本原则就是确保使用了 VPN 服务商提供的 DNS 服务器。

Windows 客户端的解决办法

    1) 在连接到 VPN 之前,设置静态IP 地址
    2) 在连接之后, 禁用原先 DNS 设置 
    3) 断开后, 切换回 DHCP 必要时恢复原 DNS 服务器


解决方案1：VPN
    单层VPN的用户，往往对安全和隐匿性要求不高，不浏览“高危”网站，所以我习惯于不将单层VPN看作隐匿上网。用户可以先通过dnsleaktest提供的在线检测工具测试一下是否存在DNS泄漏，点击这里。如果没有泄漏，则正常使用；如果仍然存在泄漏，可以查找一下是什么绕开了VPN，并发送DNS请求的。如果很难找到，可以考虑尝试以下解决方案。

解决方案2：隐匿上网（推荐）
    对于经常翻墙，且对隐匿性有一定要求的网友，使用单层VPN是不被推荐的。为增强隐匿性和安全性，往往使用虚拟机+多层代理的组合。
    reference - 编程随想博客《如何隐藏你的踪迹》

解决方案3：使用DNSCrypt加密DNS传输（推荐）
    DNSCrypt是OpenDNS发布的，旨在确保客户端与DNS服务器传输安全的工具，基于DNSCurve发展而来，浏览官网请点这里。使用该软件后，DNS通讯采用加密传输，因此即使不使用VPN，只要OpenDNS的服务器不被墙，就能在相当程度上，既防止泄漏，又防止劫持。即使使用者不打算翻墙，一样可以使用该工具保护DNS通信。DNSCrypt是开源项目，已经支持Windows，Linux，iOS和Android等多个平台，是避免DNS泄漏与劫持的利器。

^source - http://libertosher.blogspot.com

DNS污染*

DNS劫持*


+===========+
ARP欺骗与MITM
+===========+

3种ARP投毒


+========+
伪造SSL证书
+========+

SSL原理*

https握手过程的证书校验环节就是为了识别证书的有效性唯一性等等，所以严格意义上来说https下不存在中间人攻击，存在中间人攻击的前提条件是没有严格的对证书进行校验，或者人为的信任伪造证书。

存在中间人攻击原因：
    1) 证书未校验
    2) 部分校验
    3) 证书链校验

^source - http://www.evil0x.com/posts/26569.html

基本原理：

    1. 攻击者对目标客户端和网关发送ARP投毒攻击，污染它们的ARP缓存表。
    2. 客户端在浏览器中输入"https://mail.google.com/"的网址，浏览器会尝试和"https://mail.google.com/"的443端口建立SSL连接，但是因为客户端受到了ARP投毒攻击，原本发往网关的数据包被发往了攻击者的主机。
    3. 攻击者在本机使用iptables将接收到的443目的端口的数据包重定向到本机的IP地址。
    4. 这样，受攻击者客户端的浏览器就只会和攻击者主机进行SSL连接。
    5. 攻击者在本机使用监听443端口，并且伪造一个假的SSL证书，用于和客户端的连接，同时，提取客户端发送的数据包的原始目的IP地址，用于和客户端原始请求的服务器建立另一个SSL连接。
    6. 中间人攻击者在双向的SSL Socket通信都建立完成后，对两边的socket进行数据读写同步，将数据通道打通，使客户端的浏览器能够正常访问(受攻击者不会察觉到已经收到SSL中间人攻击)
    7. 在数据同步的同时，记录下明文数据，达到SSL中间人攻击的目的。


+=========+
合法证书签名
+=========+

偷盗证书，为恶意软件签名


+===========+
WPAD中间人劫持
+===========+

网络代理自动发现协议（Web Proxy Autodiscovery Protocol），通过让浏览器自动发现代理服务器，定位代理配置文件，下载编译并运行，最终自动使用代理访问网络。

代理自动配置文件（Proxy Auto-Config），定义了浏览器和其他用户代理如何自动选择适当的代理服务器来访问一个URL。




分别伪造DHCP、DNS、NBNS响应？

