【SSL欺骗】
我们查找了很多资料，找到使用sslstrip攻击的较为简便。sslstrip是在09年黑帽大会上由Moxie Marlinspike  
提出的一种针对SSL攻击的方法。
HTTPS确保服务器、客户和可信任第三方之间数据通信的安全过程，通过用户访问邮箱服务举例说明：
1、客户端使用HTTP连接到端口80的http://mail.google.com
2、服务器试用HTTP代码302重定向客户端HTTPS版本的这个网站
3、客户端连接到端口443的网站https://mail.google.com
4、服务器向客户端提供包含其电子签名的证书，该证书用于验证网址
5、客户端获取该证书，并根据信任证书颁发机构列表来验证该证书
6、加密通信成功建立
如果证书验证失败，则无法验证网址的真实度，页面显示证书验证错误。可以选择冒着危险继续访问网站。
用户通过HTTP302响应代码被定位到HTTPS或者他们点击连接将其定位到一个HTTPS站点，而sslstrip攻击就是  
在SSL连接未建立时的中间人攻击，过程说明：
1、客户端与web服务器间的流量被拦截
2、当遇到HTTPS URS时，sslstrip使用HTTP链接替换它，并保存了这种变化的映射
3、攻击机模拟客户端向服务器提供证书
4、从安全网站收到流量提供给客户端
过程中服务器会认为仍然在接收SSL流量，服务器无法辨别任何改变。用户可以感觉到唯一不同的是，浏览器中不会标记HTTPS
使用sslstrip攻击过程：
1、安装好sslstrip（只能使用LINUX）后首先配置IP转发
echo "1" > /proc/sys/net/ipv4/ip_forward
2、修改iptables防火墙配置，强制将所有被拦截的HTTP流量路由到SSLstrip将会监听的端口
iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port [指定随机端口]
3、运行sslstrip，并将其配置为监听
sslstrip -l [指定随机端口]
4、使用arpspoof工具，配置ARP欺骗来拦截目标主机的流量
arpspoof -i eth0 -t [被攻击IP] [网关IP]
关于arpspoof -i eth0 -t IP1 IP2命令，就是欺骗IP2，告诉IP2你的计算机IP是IP1。
实验执行命令时老出错而且不能实现ARP欺骗，查找到的解决办法是下面两个命令都执行
arpspoof -i eth0 -t [被攻击IP] [网关IP]
arpspoof -i eth0 -t [网关IP] [被攻击IP]
完成后就可以主动劫持任何建立的SSL连接,然后使用数据包器从流量来收集密码等所需信息。

但是由于根本只是将HTTPS连接替换成HTTP连接，随着时间发展，现在网站大多已经无法用HTTP替换连接，只有使用HTTPS  
连接才能够进入。因此这个方法也就只是用于少数还未进行升级的HTTPS连接的网站了。

【会话劫持】
任何涉及对设备间会话的攻击就是会话劫持。会话，是指存在状态的设备间的连接。  
首先访问者输入用户名和密码来得到网站的身份验证，即正式建立会话，然后网站会保持某种形式的会话  
追踪以确保访问者的登陆状态，并允许访问者访问网站资源，通常是通过cookie来保证。当会话要结束时，  
登陆信息就会被清除，然后会话才会结束。

从cookie盗窃角度来探讨会话劫持，截取已建立会话的某些部分数据，利用这些数据来假冒通信中  
所涉及的任何参加者，从而获取会话信息。即获取用于维持浏览器和登陆网站间会话状态的cookie，  
我们就能将cookie发给网络服务器并冒充会话连接。可以使用Hamster和Ferret为工具实验，也可以  
使用Burpsuite进行实验，具体实验操作在其他文档中记录。
